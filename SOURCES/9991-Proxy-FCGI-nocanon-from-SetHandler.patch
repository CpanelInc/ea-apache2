From 677fd77e6f45829595d5a5d5717b5e0ab58e9f7e Mon Sep 17 00:00:00 2001
From: Julian Brown <julian.brown@cpanel.net>
Date: Fri, 26 Jul 2024 10:18:19 -0500
Subject: [PATCH] Proxy FCGI nocanon from SetHandler

---
 modules/proxy/mod_proxy.c      |  3 +++
 modules/proxy/mod_proxy_fcgi.c | 12 +++++++-----
 2 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/modules/proxy/mod_proxy.c b/modules/proxy/mod_proxy.c
index 8f13e68..85de148 100644
--- a/modules/proxy/mod_proxy.c
+++ b/modules/proxy/mod_proxy.c
@@ -1240,6 +1240,7 @@ static int proxy_handler(request_rec *r)
 
         r->proxyreq = PROXYREQ_REVERSE;
         r->filename = apr_pstrcat(r->pool, r->handler, r->filename, NULL);
+        apr_table_setn(r->notes, "proxy-sethandler", "1");
 
         /* Still need to canonicalize r->filename */
         rc = ap_proxy_canon_url(r);
@@ -1249,9 +1250,11 @@ static int proxy_handler(request_rec *r)
         }
     }
     else if (r->proxyreq && strncmp(r->filename, "proxy:", 6) == 0) {
+        apr_table_unset(r->notes, "proxy-sethandler");
         rc = OK;
     }
     if (rc != OK) {
+        apr_table_unset(r->notes, "proxy-sethandler");
         return rc;
     }
 
diff --git a/modules/proxy/mod_proxy_fcgi.c b/modules/proxy/mod_proxy_fcgi.c
index d420df6..e52308e 100644
--- a/modules/proxy/mod_proxy_fcgi.c
+++ b/modules/proxy/mod_proxy_fcgi.c
@@ -92,7 +92,8 @@ static int proxy_fcgi_canon(request_rec *r, char *url)
         host = apr_pstrcat(r->pool, "[", host, "]", NULL);
     }
 
-    if (apr_table_get(r->notes, "proxy-nocanon")
+    if (apr_table_get(r->notes, "proxy-sethandler")
+        || apr_table_get(r->notes, "proxy-nocanon")
         || apr_table_get(r->notes, "proxy-noencode")) {
         path = url;   /* this is the raw/encoded path */
     }
@@ -106,11 +107,12 @@ static int proxy_fcgi_canon(request_rec *r, char *url)
             return HTTP_BAD_REQUEST;
         }
     }
-    /*
-     * If we have a raw control character or a ' ' in nocanon path,
-     * correct encoding was missed.
+    /* If we have a raw control character in nocanon path,
+     * correct encoding was missed. We still allow for space and
+     * tab because r->filename does not end up in a HTTP request
+     * line but in SCRIPT_FILENAME for fgci.
      */
-    if (path == url && *ap_scan_vchar_obstext(path)) {
+    if (path == url && *ap_scan_http_field_content(path)) {
         ap_log_rerror(APLOG_MARK, APLOG_ERR, 0, r, APLOGNO(10414)
                       "To be forwarded path contains control "
                       "characters or spaces");
-- 
2.43.2

